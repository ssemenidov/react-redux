{"version":3,"sources":["reportWebVitals.js","redux/types.js","redux/appReducer.js","redux/postsReducer.js","redux/rootReducers.js","components/Post.js","components/FetchedPosts.js","redux/actions.js","components/PostForm.js","components/Posts.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CREATE_POST","FETCH_POST","SHOW_LOADER","HIDE_LOADER","initialState","loader","posts","fetchedPosts","rootReducer","combineReducers","state","action","type","payload","app","Post","post","useState","isModalVisible","setIsModalVisible","title","visible","onOk","onCancel","body","extra","onClick","style","maxWidth","width","margin","mapDispatchToProps","fetchPost","dispatch","a","fetch","res","json","connect","props","FetchPosts","header","display","justifyContent","bordered","loading","dataSource","renderItem","Item","layout","labelCol","span","wrapperCol","tailLayout","offset","createPost","Form","useForm","form","name","initialValues","remember","onFinish","values","newPost","text","id","Date","now","toString","resetFields","onFinishFailed","errorInfo","console","log","className","label","rules","required","message","TextArea","rows","htmlType","App","gutter","store","createSagaMiddleware","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32c1ede3.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const CREATE_POST = \"CREATE_POST\";\r\nexport const FETCH_POST = \"FETCH_POST\";\r\nexport const SHOW_LOADER = \"SHOW_LOADER\";\r\nexport const HIDE_LOADER = \"HIDE_LOADER\";\r\nexport const REQUEST_POSTS = \"REQUEST_POSTS\";\r\n","import { HIDE_LOADER, SHOW_LOADER } from \"./types\";\r\n\r\nconst initialState = {\r\n    loader: false,\r\n};\r\nexport default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SHOW_LOADER:\r\n            return { ...state, loader: true };\r\n        case HIDE_LOADER:\r\n            return { ...state, loader: false };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { CREATE_POST, FETCH_POST } from \"./types\";\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    fetchedPosts: [],\r\n};\r\nexport const postsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_POST:\r\n            return { ...state, posts: [...state.posts, action.payload] };\r\n        case FETCH_POST:\r\n            return { ...state, fetchedPosts: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport appReducer from \"./appReducer\";\r\nimport { postsReducer } from \"./postsReducer\";\r\nexport const rootReducer = combineReducers({\r\n    posts: postsReducer,\r\n    app: appReducer,\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport { Card } from \"antd\";\r\nfunction Post({ post }) {\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={post.title}\r\n                visible={isModalVisible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n            >\r\n                <p>{post.body}</p>\r\n            </Modal>\r\n            <Card\r\n                title={post.title}\r\n                extra={\r\n                    <Button type=\"primary\" onClick={showModal}>\r\n                        More\r\n                    </Button>\r\n                }\r\n                style={{ maxWidth: \"400px\", width: \"100%\", margin: \"0 auto\" }}\r\n            >\r\n                <h2>{post.body}</h2>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport Post from \"./Post\";\r\nimport { List, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchPost, showLoader, hideLoader } from \"../redux/actions\";\r\nimport Column from \"antd/lib/table/Column\";\r\nfunction FetchedPosts(props) {\r\n    const FetchPosts = async () => {\r\n        await props.fetchPost();\r\n    };\r\n    return (\r\n        <>\r\n            <List\r\n                header={\r\n                    <span\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                        }}\r\n                    >\r\n                        <h1>Fetched Posts</h1>\r\n                        <span>\r\n                            <Button type=\"primary\" onClick={FetchPosts}>\r\n                                Update\r\n                            </Button>\r\n                        </span>\r\n                    </span>\r\n                }\r\n                bordered\r\n                loading={props.loader}\r\n                dataSource={props.posts}\r\n                renderItem={(post) => (\r\n                    <List.Item>\r\n                        <Post post={post}></Post>\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.posts.fetchedPosts,\r\n        loader: state.app.loader,\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    fetchPost,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FetchedPosts);\r\n","import { CREATE_POST, FETCH_POST, HIDE_LOADER, SHOW_LOADER } from \"./types\";\r\n\r\nexport function createPost(post) {\r\n    return {\r\n        type: CREATE_POST,\r\n        payload: post,\r\n    };\r\n}\r\nexport function showLoader() {\r\n    return {\r\n        type: SHOW_LOADER,\r\n    };\r\n}\r\nexport function hideLoader() {\r\n    return {\r\n        type: HIDE_LOADER,\r\n    };\r\n}\r\nexport function fetchPost() {\r\n    return async (dispatch) => {\r\n        dispatch(showLoader());\r\n        const res = await fetch(\r\n            \"https://jsonplaceholder.typicode.com/posts?_limit=5\"\r\n        );\r\n        const json = await res.json();\r\n        dispatch({ type: FETCH_POST, payload: json });\r\n        dispatch(hideLoader());\r\n    };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { createPost } from \"../redux/actions\";\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n};\r\n\r\nfunction PostForm(props) {\r\n    const [form] = Form.useForm();\r\n    const onFinish = (values) => {\r\n        const newPost = {\r\n            title: values.title,\r\n            body: values.text,\r\n            id: Date.now().toString(),\r\n        };\r\n        props.createPost(newPost);\r\n        form.resetFields();\r\n    };\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log(\"Failed:\", errorInfo);\r\n    };\r\n    return (\r\n        <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            form={form}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n            className=\"Form\"\r\n        >\r\n            <Form.Item\r\n                label=\"Title\"\r\n                name=\"title\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your title\",\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Text\"\r\n                name=\"text\"\r\n                rules={[\r\n                    {\r\n                        required: false,\r\n                        message: \"Please input your text\",\r\n                    },\r\n                ]}\r\n            >\r\n                <Input.TextArea rows={3} />\r\n            </Form.Item>\r\n            <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default connect(null, { createPost })(PostForm);\r\n","import React from \"react\";\r\nimport Post from \"./Post\";\r\nimport { List } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nfunction Posts({ posts }) {\r\n    return (\r\n        <List\r\n            header={<h1>Posts</h1>}\r\n            bordered\r\n            dataSource={posts}\r\n            renderItem={(post) => (\r\n                <List.Item>\r\n                    <Post post={post} key={post.id}></Post>\r\n                </List.Item>\r\n            )}\r\n        />\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.posts.posts,\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(Posts);\r\n","import React from \"react\";\nimport FetchedPosts from \"./components/FetchedPosts\";\nimport PostForm from \"./components/PostForm\";\nimport Posts from \"./components/Posts\";\nimport { Row, Col } from \"antd\";\nimport \"./App.css\";\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Row>\n                <Col span={18}>\n                    <PostForm></PostForm>\n                </Col>\n            </Row>\n            <Row gutter={32}>\n                <Col span={12}>\n                    <Posts></Posts>\n                </Col>\n                <Col span={12}>\n                    <FetchedPosts></FetchedPosts>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\n\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { compose, createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { rootReducer } from \"./redux/rootReducers\";\nimport thunk from \"redux-thunk\";\nimport App from \"./App\";\nimport \"antd/dist/antd.css\";\nconst saga = createSagaMiddleware();\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk),\n        window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}